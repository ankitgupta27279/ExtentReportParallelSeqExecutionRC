<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="4" total="20" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Sanity Test Report (0)" duration-ms="215" started-at="2019-11-27T16:17:41Z" finished-at="2019-11-27T16:17:41Z">
    <groups>
    </groups>
    <test name="Chrome1" duration-ms="189" started-at="2019-11-27T16:17:41Z" finished-at="2019-11-27T16:17:41Z">
      <class name="com.rippon.Class1Test">
        <test-method status="PASS" signature="meth2()[pri:1, instance:com.rippon.Class1Test@3a03464]" name="meth2" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth2 -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth2 status=SUCCESS method=Class1Test.meth2()[pri:1, instance:com.rippon.Class1Test@3a03464] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="setExtentReport" is-config="true" duration-ms="2" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="FAIL" signature="meth3()[pri:2, instance:com.rippon.Class1Test@3a03464]" name="meth3" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.rippon.Class1Test.meth3(Class1Test.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="getResult" is-config="true" duration-ms="4" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth3 status=FAILURE method=Class1Test.meth3()[pri:2, instance:com.rippon.Class1Test@3a03464] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="setExtentReport" is-config="true" duration-ms="2" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth4()[pri:3, instance:com.rippon.Class1Test@3a03464]" name="meth4" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth4 status=SUCCESS method=Class1Test.meth4()[pri:3, instance:com.rippon.Class1Test@3a03464] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.skipTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="SKIP" signature="skipTest()[pri:4, instance:com.rippon.Class1Test@3a03464]" name="skipTest" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at com.rippon.Class1Test.skipTest(Class1Test.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@3a03464]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Class1Test.skipTest()[pri:4, instance:com.rippon.Class1Test@3a03464] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.rippon.Class1Test -->
      <class name="com.rippon.Class2Test">
        <test-method status="PASS" signature="initSetUp(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.rippon.Class2Test@4909b8da]" name="initSetUp" is-config="true" duration-ms="8" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@337d0578]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Desktop]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[LocalMachine]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[http://chrome1.chrome.com/]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSetUp -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class2Test@4909b8da]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class2Test.meth1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth1()[pri:1, instance:com.rippon.Class2Test@4909b8da]" name="meth1" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class2Test@4909b8da]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth1 status=SUCCESS method=Class2Test.meth1()[pri:1, instance:com.rippon.Class2Test@4909b8da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.rippon.Class2Test@4909b8da]" name="tearDown" is-config="true" duration-ms="150" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@337d0578]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.rippon.Class2Test -->
    </test> <!-- Chrome1 -->
    <test name="Firefox1" duration-ms="215" started-at="2019-11-27T16:17:41Z" finished-at="2019-11-27T16:17:41Z">
      <class name="com.rippon.Class1Test">
        <test-method status="PASS" signature="initSetUp(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="initSetUp" is-config="true" duration-ms="8" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@59e84876]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Desktop]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[LocalMachine]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[http://firefox1.firefox.com/]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSetUp -->
        <test-method status="PASS" signature="meth2()[pri:1, instance:com.rippon.Class1Test@6df97b55]" name="meth2" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth2 -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth2 status=SUCCESS method=Class1Test.meth2()[pri:1, instance:com.rippon.Class1Test@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="meth3()[pri:2, instance:com.rippon.Class1Test@6df97b55]" name="meth3" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.rippon.Class1Test.meth3(Class1Test.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth3 status=FAILURE method=Class1Test.meth3()[pri:2, instance:com.rippon.Class1Test@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth4()[pri:3, instance:com.rippon.Class1Test@6df97b55]" name="meth4" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth4 -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.skipTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth4 status=SUCCESS method=Class1Test.meth4()[pri:3, instance:com.rippon.Class1Test@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="skipTest()[pri:4, instance:com.rippon.Class1Test@6df97b55]" name="skipTest" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at com.rippon.Class1Test.skipTest(Class1Test.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="getResult" is-config="true" duration-ms="2" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Class1Test.skipTest()[pri:4, instance:com.rippon.Class1Test@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="tearDown" is-config="true" duration-ms="189" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@59e84876]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endAllReports()[pri:0, instance:com.rippon.Class1Test@6df97b55]" name="endAllReports" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endAllReports -->
      </class> <!-- com.rippon.Class1Test -->
      <class name="com.rippon.Class2Test">
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class2Test@3cbbc1e0]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class2Test.meth1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth1()[pri:1, instance:com.rippon.Class2Test@3cbbc1e0]" name="meth1" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class2Test@3cbbc1e0]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth1 status=SUCCESS method=Class2Test.meth1()[pri:1, instance:com.rippon.Class2Test@3cbbc1e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.rippon.Class2Test -->
    </test> <!-- Firefox1 -->
  </suite> <!-- Sanity Test Report (0) -->
  <suite name="Sanity Test Report" duration-ms="707" started-at="2019-11-27T16:17:40Z" finished-at="2019-11-27T16:17:41Z">
    <groups>
    </groups>
    <test name="Chrome1" duration-ms="684" started-at="2019-11-27T16:17:40Z" finished-at="2019-11-27T16:17:41Z">
      <class name="com.rippon.Class1Test">
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth2()[pri:1, instance:com.rippon.Class1Test@64616ca2]" name="meth2" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth2 status=SUCCESS method=Class1Test.meth2()[pri:1, instance:com.rippon.Class1Test@64616ca2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="FAIL" signature="meth3()[pri:2, instance:com.rippon.Class1Test@64616ca2]" name="meth3" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.rippon.Class1Test.meth3(Class1Test.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="getResult" is-config="true" duration-ms="7" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth3 status=FAILURE method=Class1Test.meth3()[pri:2, instance:com.rippon.Class1Test@64616ca2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth4()[pri:3, instance:com.rippon.Class1Test@64616ca2]" name="meth4" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth4 status=SUCCESS method=Class1Test.meth4()[pri:3, instance:com.rippon.Class1Test@64616ca2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.skipTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="SKIP" signature="skipTest()[pri:4, instance:com.rippon.Class1Test@64616ca2]" name="skipTest" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at com.rippon.Class1Test.skipTest(Class1Test.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@64616ca2]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Class1Test.skipTest()[pri:4, instance:com.rippon.Class1Test@64616ca2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.rippon.Class1Test -->
      <class name="com.rippon.Class2Test">
        <test-method status="PASS" signature="initSetUp(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.rippon.Class2Test@3b81a1bc]" name="initSetUp" is-config="true" duration-ms="147" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@61a485d2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Desktop]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[LocalMachine]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[http://chrome1.chrome.com/]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSetUp -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class2Test@3b81a1bc]" name="setExtentReport" is-config="true" duration-ms="4" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class2Test.meth1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth1()[pri:1, instance:com.rippon.Class2Test@3b81a1bc]" name="meth1" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class2Test@3b81a1bc]" name="getResult" is-config="true" duration-ms="4" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth1 status=SUCCESS method=Class2Test.meth1()[pri:1, instance:com.rippon.Class2Test@3b81a1bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.rippon.Class2Test@3b81a1bc]" name="tearDown" is-config="true" duration-ms="487" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@61a485d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.rippon.Class2Test -->
    </test> <!-- Chrome1 -->
    <test name="Firefox1" duration-ms="707" started-at="2019-11-27T16:17:40Z" finished-at="2019-11-27T16:17:41Z">
      <class name="com.rippon.Class1Test">
        <test-method status="PASS" signature="initSetUp(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="initSetUp" is-config="true" duration-ms="147" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39fb3ab6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Desktop]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[LocalMachine]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[http://firefox1.firefox.com/]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSetUp -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="setExtentReport" is-config="true" duration-ms="5" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth2()[pri:1, instance:com.rippon.Class1Test@327471b5]" name="meth2" duration-ms="5" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth2 status=SUCCESS method=Class1Test.meth2()[pri:1, instance:com.rippon.Class1Test@327471b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="FAIL" signature="meth3()[pri:2, instance:com.rippon.Class1Test@327471b5]" name="meth3" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.rippon.Class1Test.meth3(Class1Test.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth3 status=FAILURE method=Class1Test.meth3()[pri:2, instance:com.rippon.Class1Test@327471b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth4()[pri:3, instance:com.rippon.Class1Test@327471b5]" name="meth4" duration-ms="5" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth4 status=SUCCESS method=Class1Test.meth4()[pri:3, instance:com.rippon.Class1Test@327471b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.skipTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="SKIP" signature="skipTest()[pri:4, instance:com.rippon.Class1Test@327471b5]" name="skipTest" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at com.rippon.Class1Test.skipTest(Class1Test.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Class1Test.skipTest()[pri:4, instance:com.rippon.Class1Test@327471b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.rippon.Class1Test@327471b5]" name="tearDown" is-config="true" duration-ms="506" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39fb3ab6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endAllReports()[pri:0, instance:com.rippon.Class1Test@327471b5]" name="endAllReports" is-config="true" duration-ms="0" started-at="2019-11-27T21:47:41Z" finished-at="2019-11-27T21:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endAllReports -->
      </class> <!-- com.rippon.Class1Test -->
      <class name="com.rippon.Class2Test">
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class2Test@4157f54e]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class2Test.meth1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth1()[pri:1, instance:com.rippon.Class2Test@4157f54e]" name="meth1" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class2Test@4157f54e]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:47:40Z" finished-at="2019-11-27T21:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth1 status=SUCCESS method=Class2Test.meth1()[pri:1, instance:com.rippon.Class2Test@4157f54e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.rippon.Class2Test -->
    </test> <!-- Firefox1 -->
  </suite> <!-- Sanity Test Report -->
</testng-results>
