<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="3" total="8" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Sanity Test Report" duration-ms="593" started-at="2019-11-27T21:45:38 IST" finished-at="2019-11-27T21:45:39 IST">
    <groups>
    </groups>
    <test name="Firefox1" duration-ms="593" started-at="2019-11-27T21:45:38 IST" finished-at="2019-11-27T21:45:39 IST">
      <class name="com.rippon.Class1Test">
        <test-method status="PASS" signature="initSetUp(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="initSetUp" is-config="true" duration-ms="147" started-at="2019-11-27T21:45:38 IST" finished-at="2019-11-27T21:45:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3cb1ffe6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Desktop]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[LocalMachine]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[http://firefox1.firefox.com/]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initSetUp -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="setExtentReport" is-config="true" duration-ms="4" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth2()[pri:1, instance:com.rippon.Class1Test@2b9627bc]" name="meth2" duration-ms="9" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="getResult" is-config="true" duration-ms="2" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth2 status=SUCCESS method=Class1Test.meth2()[pri:1, instance:com.rippon.Class1Test@2b9627bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="setExtentReport" is-config="true" duration-ms="1" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="FAIL" signature="meth3()[pri:2, instance:com.rippon.Class1Test@2b9627bc]" name="meth3" duration-ms="2" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.rippon.Class1Test.meth3(Class1Test.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth3 status=FAILURE method=Class1Test.meth3()[pri:2, instance:com.rippon.Class1Test@2b9627bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.meth4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth4()[pri:3, instance:com.rippon.Class1Test@2b9627bc]" name="meth4" duration-ms="1" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth4 status=SUCCESS method=Class1Test.meth4()[pri:3, instance:com.rippon.Class1Test@2b9627bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="setExtentReport" is-config="true" duration-ms="0" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class1Test.skipTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="SKIP" signature="skipTest()[pri:4, instance:com.rippon.Class1Test@2b9627bc]" name="skipTest" duration-ms="2" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
at com.rippon.Class1Test.skipTest(Class1Test.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="getResult" is-config="true" duration-ms="0" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Class1Test.skipTest()[pri:4, instance:com.rippon.Class1Test@2b9627bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="tearDown" is-config="true" duration-ms="361" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3cb1ffe6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endAllReports()[pri:0, instance:com.rippon.Class1Test@2b9627bc]" name="endAllReports" is-config="true" duration-ms="1" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endAllReports -->
      </class> <!-- com.rippon.Class1Test -->
      <class name="com.rippon.Class2Test">
        <test-method status="PASS" signature="setExtentReport(java.lang.reflect.Method)[pri:0, instance:com.rippon.Class2Test@65e2dbf3]" name="setExtentReport" is-config="true" duration-ms="2" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.rippon.Class2Test.meth1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="meth1()[pri:1, instance:com.rippon.Class2Test@65e2dbf3]" name="meth1" duration-ms="1" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meth1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.rippon.Class2Test@65e2dbf3]" name="getResult" is-config="true" duration-ms="2" started-at="2019-11-27T21:45:39 IST" finished-at="2019-11-27T21:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=meth1 status=SUCCESS method=Class2Test.meth1()[pri:1, instance:com.rippon.Class2Test@65e2dbf3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.rippon.Class2Test -->
    </test> <!-- Firefox1 -->
  </suite> <!-- Sanity Test Report -->
</testng-results>
